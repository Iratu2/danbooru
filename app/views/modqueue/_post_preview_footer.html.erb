<% disapproval = post.disapprovals.find { |disapproval| disapproval.user == CurrentUser.user } %>

<div class="flex flex-col mt-2 gap-2">
  <div class="flex flex-wrap gap-2 items-center justify-center w-full text-xs">
    <div class="">
      <% if post.parsed_source.present? %>
        <%= external_link_to post.normalized_source, external_site_icon(post.parsed_source.site_name, class: "h-4"), title: post.normalized_source, class: "inline-block align-top" %>
      <% end %>

      <%= link_to post.media_asset do %>
        <%= number_to_human_size(post.media_asset.file_size) %> .<%= post.media_asset.file_ext %>,
        <%= post.media_asset.image_width %>x<%= post.media_asset.image_height %>
      <% end %>
    </div>

    <% if @preview_size.to_i > 180 %>
      <%= render_post_votes post, current_user: CurrentUser.user %>
    <% end %>
  </div>

  <div class="flex flex-wrap justify-center gap-2">
    <%= link_to "Approve", post_approvals_path(post_id: post.id), method: :post, remote: true, class: "button-primary button-xs", disabled: !post.is_approvable? %>
    <%= link_to "Skip", post_disapprovals_path(post_disapproval: { post_id: post.id, reason: "disinterest" }), method: :post, remote: true, class: "button-primary button-xs", disabled: disapproval.present? %>

    <%= render PopupMenuComponent.new(button_classes: "button-outline-danger button-xs align-top") do |menu| %>
      <% menu.button do %>
        Reject
      <% end %>

      <% menu.item do %>
        <%= link_to "Poor quality", post_disapprovals_path(post_disapproval: { post_id: post.id, reason: "poor_quality" }), method: :post, remote: true %>
      <% end %>

      <% menu.item do %>
        <%= link_to "Breaks rules", post_disapprovals_path(post_disapproval: { post_id: post.id, reason: "breaks_rules" }), method: :post, remote: true %>
      <% end %>

      <% menu.item do %>
        <%= link_to "Detailed Rejection", "#", "data-post-id": post.id, class: "detailed-rejection-link" %>
      <% end %>
    <% end %>
  </div>

  <% if (CurrentUser.is_approver? || post.created_at < Danbooru.config.moderation_period.ago) && post.disapprovals.map(&:reason).without("disinterest").present? %>
    <div class="text-center text-xs">
      <% %w[poor_quality breaks_rules].each do |reason| %>
        <% if post.disapprovals.map(&:reason).grep(reason).count > 0 %>
          <span class="inline-block rounded px-2 text-inverse bg:error-color">
            <%= reason.titleize %>: <%= post.disapprovals.map(&:reason).grep(reason).count %>
          </span>
        <% end %>
      <% end %>
    </div>
  <% end %>
</div>
